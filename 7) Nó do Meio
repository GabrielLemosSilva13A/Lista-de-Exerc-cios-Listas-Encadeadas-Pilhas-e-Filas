#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int valor;
    struct Node* proximo;
} Node;

// Função para encontrar o nó do meio
Node* encontrar_meio(Node* cabeca) {
    if (cabeca == NULL) return NULL;

    Node* lento = cabeca;
    Node* rapido = cabeca;

    while (rapido != NULL && rapido->proximo != NULL) {
        lento = lento->proximo;           // anda 1 passo
        rapido = rapido->proximo->proximo; // anda 2 passos
    }

    return lento; // quando rápido chega ao fim, lento está no meio
}

Node* criar_no(int valor) {
    Node* novo = (Node*)malloc(sizeof(Node));
    novo->valor = valor;
    novo->proximo = NULL;
    return novo;
}

void inserir_fim(Node** cabeca, int valor) {
    Node* novo = criar_no(valor);
    if (*cabeca == NULL) {
        *cabeca = novo;
        return;
    }
    Node* atual = *cabeca;
    while (atual->proximo != NULL) {
        atual = atual->proximo;
    }
    atual->proximo = novo;
}

void imprimir_lista(Node* cabeca) {
    while (cabeca != NULL) {
        printf("%d -> ", cabeca->valor);
        cabeca = cabeca->proximo;
    }
    printf("NULL\n");
}

int main() {
    Node* lista = NULL;

    inserir_fim(&lista, 10);
    inserir_fim(&lista, 20);
    inserir_fim(&lista, 30);
    inserir_fim(&lista, 40);
    inserir_fim(&lista, 50);

    printf("Lista:\n");
    imprimir_lista(lista);

    Node* meio = encontrar_meio(lista);
    if (meio != NULL)
        printf("Nó do meio: %d\n", meio->valor);
    else
        printf("Lista vazia.\n");

    return 0;
}
