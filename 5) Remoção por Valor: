#include <stdio.h>
#include <stdlib.h>


typedef struct Node {
    int valor;
    struct Node* proximo;
} Node;


void remover_valor(Node** cabeca, int valor) {
    Node* atual = *cabeca;
    Node* anterior = NULL;

    
    if (atual == NULL) return;

    
    if (atual->valor == valor) {
        *cabeca = atual->proximo;
        free(atual);
        return;
    }

    
    while (atual != NULL && atual->valor != valor) {
        anterior = atual;
        atual = atual->proximo;
    }

    
    if (atual == NULL) return;

    
    anterior->proximo = atual->proximo;
    free(atual);
}

Node* criar_no(int valor) {
    Node* novo = (Node*)malloc(sizeof(Node));
    novo->valor = valor;
    novo->proximo = NULL;
    return novo;
}


void inserir_fim(Node** cabeca, int valor) {
    Node* novo = criar_no(valor);
    if (*cabeca == NULL) {
        *cabeca = novo;
        return;
    }
    Node* atual = *cabeca;
    while (atual->proximo != NULL) {
        atual = atual->proximo;
    }
    atual->proximo = novo;
}


void imprimir_lista(Node* cabeca) {
    while (cabeca != NULL) {
        printf("%d -> ", cabeca->valor);
        cabeca = cabeca->proximo;
    }
    printf("NULL\n");
}

int main() {
    Node* lista = NULL;

    inserir_fim(&lista, 1);
    inserir_fim(&lista, 2);
    inserir_fim(&lista, 3);
    inserir_fim(&lista, 4);
    inserir_fim(&lista, 2);

    printf("Lista antes da remoção:\n");
    imprimir_lista(lista);

    remover_valor(&lista, 2);

    printf("Lista após remover a primeira ocorrência de 2:\n");
    imprimir_lista(lista);

    return 0;
}
