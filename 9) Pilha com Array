#include <stdio.h>
#include <stdbool.h>

#define TAMANHO_MAX 100

typedef struct {
    int dados[TAMANHO_MAX];
    int topo; // Ã­ndice do topo da pilha (-1 = vazia)
} Pilha;


void inicializar(Pilha* p) {
    p->topo = -1;
}


bool esta_vazia(Pilha* p) {
    return p->topo == -1;
}


bool esta_cheia(Pilha* p) {
    return p->topo == TAMANHO_MAX - 1;
}


bool push(Pilha* p, int valor) {
    if (esta_cheia(p)) {
        printf("Erro: pilha cheia!\n");
        return false;
    }
    p->dados[++p->topo] = valor;
    return true;
}


bool pop(Pilha* p, int* removido) {
    if (esta_vazia(p)) {
        printf("Erro: pilha vazia!\n");
        return false;
    }
    *removido = p->dados[p->topo--];
    return true;
}


bool topo(Pilha* p, int* valor) {
    if (esta_vazia(p)) {
        printf("Erro: pilha vazia!\n");
        return false;
    }
    *valor = p->dados[p->topo];
    return true;
}
int main() {
    Pilha minhaPilha;
    inicializar(&minhaPilha);

    push(&minhaPilha, 10);
    push(&minhaPilha, 20);
    push(&minhaPilha, 30);

    int valor;
    topo(&minhaPilha, &valor);
    printf("Topo: %d\n", valor); // Deve imprimir 30

    pop(&minhaPilha, &valor);
    printf("Valor removido: %d\n", valor); // Deve imprimir 30

    topo(&minhaPilha, &valor);
    printf("Novo topo: %d\n", valor); // Deve imprimir 20

    return 0;
}
